<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
    <Properties>
        <Property name="basePath">target/logs</Property> <!-- Dosya yolu; target in altinda logs adinda dosyada-->
    </Properties>
    <!-- Appenders : where to show the logs. console, file, ...-->
    <Appenders>
        <!-- formatting fileName for dynamic name generation-->
        <RollingFile name="file"
                     filePattern="${basePath}/TechProEd-%d{HH-mm-ss-SSS}.log"> <!-- Dosyanin ismi-->
            <PatternLayout>
                <pattern>%d %p %c{1.} [%t] %m%n</pattern>
            </PatternLayout>
            <!-- creates new file after the size exceeds-->
            <SizeBasedTriggeringPolicy size="500" />
        </RollingFile>
        <Console name="Console" target="SYSTEM_OUT">
            <!-- PatternLayout : what format logs will be displayed-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
    </Appenders>
    <!-- Loggers : logs the information. Logger is used to override Root level. additivity="false" avoids duplicated messages that can come from parent levels.
    This should be used with Logger-->
    <Loggers>
        <!-- SPECIAL SETTINGS : Istenilen klasordeki ayarlari degistirmek icin kullanilir.-->
        <Logger name="day18" level="trace" additivity="false"> <!-- day18 dosyasindaki loglama islemini trace seviyesinde print yap. Birden fazla dosya olusturmak icin burdan -->
            <AppenderRef ref="Console"/> <!-- Loglama mesajini konsolda goruruz-->
            <AppenderRef ref="file"/> <!-- Loglama mesajini file da goruruz-->
        </Logger> <!-- buraya kadar fazla fazla olusturabilirsin-->
        <!-- Root : Java klasoru altindaki tum dosyalari kapsar(<Root un <Logger dan farki budur.)Tum dosyalari info seviyesinde calistir, day18 dosyasini trace seviyesinde calistir demek icin
        logger i kullaniyoruz. Aslinda bu ayrima gerek yok, bunu biz ekledik. Normalde bu root seklinde gelir. Ek bir dosyaya ayar yapmak icin logger i kullanabilirsin.
        By default level = error prints errors and fatal level=trace tum klasordeki tum siniflara bu ayari uygular-->
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="file"/>
        </Root>
    </Loggers>
</Configuration>